---
layout: post
title:  "linux-基本操作"
tags: linux
---

### linux命令大全网址

 - [http://www.runoob.com/linux/linux-command-manual.html](http://www.runoob.com/linux/linux-command-manual.html "http://www.runoob.com/linux/linux-command-manual.html")


---

### 查看磁盘空间命令
    
    df 
    df -m 按M显示大小


### 统计nginx日志中某url分别被不同ip的访问次数

      grep -w '/user/list' access.log | awk '{print $1}'|sort|uniq -c
      匹配 精确等于 /user/list 从access.log文件中找 并且 将空格分割后下标为1的(ip)拼接下标为7的(api地址) 并且 排序令ip相邻 并且 去重 统计

### 查看哪个进程占用的SWAP分区比较多

    for i in $(ls /proc | grep "^[0-9]" | awk '$0>100'); do awk '/Swap:/{a=a+$2}END{print '"$i"',a/1024"M"}' /proc/$i/smaps;done| sort -k2nr | head

### 查看TCP状态
    netstat -n | awk '/^tcp/ {++S[$NF]} END {for(a in S) print a, S[a]}'  

### 查询最大的10个文件

    find / -type f -print0 | xargs -0 du -h | sort -rh | head -n 10
 
 详解：
 
 find：在目录结构中搜索文件的命令
 
 /：在整个系统（从根目录开始）中查找
 
 -type：指定文件类型
 
 f：普通文件
 
 -print0：在标准输出显示完整的文件名，其后跟一个空字符（null）
 
 |：控制操作符，将一条命令的输出传递给下一个命令以供进一步处理
 
 xargs：将标准输入转换成命令行参数的命令
 
 -0：以空字符（null）而不是空白字符（LCTT 译者注：即空格、制表符和换行）来分割记录
 
 du -h：以可读格式计算磁盘空间使用情况的命令
 
 sort：对文本文件进行排序的命令
 
 -r：反转结果
 
 -h：用可读格式打印输出
 
 head：输出文件开头部分的命令
 
 n -10：打印前 10 个文件
 
 
 
###  基本脚本编写

详细模式调试脚本
    
    sh -x startup.sh

数学运算 (不能算小数)

    a=`expr 1 + 2`
    echo $a
    
    输出3
    
逻辑运算 (与-a 或-o)
    
    if [ $1 -eq $2 -a $1 = 1 ]
        then
        echo "param1 == param2 and param1 = 1"
    elif [ $1 -ne $2 -o $1 = 2  ]
        then
        echo  "param1 != param2 or param1 = 2"
    else
        echo "others"
    fi
    
for循环 # for var in [params] do ... done

    for var in 1 2 3 4 5 6 7 8 9 10
    do
        echo "number is $var"
    done
    
while循环 # while test do ... done
     
    num=1
    sum=0
    while [ $num -le 100 ]
    do
        sum=`expr $sum + $num`
        num=`expr $num + 1`
    done
    #sleep 5
    echo $sum

case判断 
 
    op=a
    case $op in
            a)
        echo "you selected a";;
            b)
        echo "you selected b";;
        c)
        echo "you selected c";;
        *)
        echo "error"
    esac

菜单选择 # select var in [params] do ... done
    
    select var in "java" "c++" "php" "linux" "python" "ruby" "c#"
    do
        break
    done
    echo "you selected $var"
    
    
判断是否是文件夹 # if test $1 then ... else ... fi

    if [ -d $1 ] 
    then
        echo "this is a directory!"
    else
        echo "this is not a directory!"
    fi
    
循环中退出 # continue, break
    
    i=0
    while [ $i -le 100 ]
    do
        i=`expr $i + 1`
        if [ $i -eq 5 -o $i -eq 10 ]
            then continue;
        else
            echo "this number is $i"
        fi
     
        if [ $i -eq 15 ]
            then break;
            fi
    done
    
    